migrate create -ext sql -dir db/migration -seq init_schema
migrate -path db/migration -database "postgresql://root:secret@localhost:5432/simple_bank?sslmode=disable" -verbose up

go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

sqlc version
sqlc help
sqlc init // generise yaml file u root-u projekta
sqlc generate

 go test -v -cover ./...

 go test -timeout 30s -run ^TestTransferTx$ -v

 mkdir -p .github/workflows

 go get github.com/spf13/viper

 go install github.com/golang/mock/mockgen@v1.6.0

 mockgen -package mockdb -destination db/mock/store.go github.com/tijanadmi/simplebank/db/sqlc Store

 /***** pokrecemo izmene na bazi sa novom migracijom ***/
 migrate create -ext sql -dir db/migration -seq add_users
 make migrateup  // dobijamo gresku zbog toga sto imamo podatke u tabeli account a dizemo constraint i forein key
make migratedown // dobijamo gresku zbog diry version jer nam prethodna migracija nije prosla, zato rucno u bazi u tabeli schema_migration promenimo kolonu dirty na false
 make migratedown // sada prolazi brisanje svih podataka iz baze
  make migrateup // prolazi

  make migratedown1 // brisemo promene u bazi koje su kreirane sa migrate verzije 1
  make migrateup1

make sqlc

make test // ne prolaze mock testovi zato sto smo dobili jos 2 nova metoda Querie interface-account
//make mock // da regenerisemo kod za mock Store
mockgen -package mockdb -destination db/mock/store.go github.com/tijanadmi/simplebank/db/sqlc Store
make test // sada prolazi


go get github.com/google/uuid

go get -u github.com/o1egl/paseto

/**** Rad sa sesijom ***/
migrate create -ext sql -dir db/migration -seq add_sessions
make migrateup
make sqlc

/*** DB dokumentacija ***/
node -v
npm -v
npm install -g dbdocs
/*** posto je node zastareo morala sam da instaliram ponovo novu verziju ***/
choco install nodejs-lts -y

dbdocs /*** vraca spisak komandi ako je dobro instaliran ***/
dbdocs login /*** unesemo 1 i email i nakon dobijanja mejla OTP kod***/
dbdocs build doc/db.dbml /*** kreira se dokumentacija **/
dbdocs password --set secret --project simple_bank /*** postavi se password=secret ***/

/*** instalacija dbml ***/
https://dbml.dbdiagram.io/cli
npm install -g @dbml/cli //instalira se dbml
dbml2sql --help
dbml2sql --postgres -o doc/schema.sql doc/db.dbml //generise se db.dbml na putanji koju smo specificirali
/*** ubacili smo komande u Makefile tako da kad god je potrebno regenerisati dbschema kucamo komadu: ***/
make db_docs
make db_schema

/*** kreiramo novi branch dbdoc **/
git checkout -b ft/dbdocs
git add .
git commit -m "add dbdocs"
git push origin ft/dbdocs

/*** koristimo izgenerisani link https://github.com/tijanadmi/simplebank/pull/new/ft/dbdocs da bi kreirali pull request **/
odemo na github i nuradimo pull requets i nakon sto testovi prodju uradimo  merge to master i obrisemo branch ***/


/**** gRPC ***/
protoc --version
protoc-gen-go --version
protoc-gen-go-grpc --version

kako bi smo namestili kompajler u VSC moramo da podesimo settings.json fajl (File->Preferences-> trazimo proto3 i kliknemo na Edit settings.json link):
Dodamo deo:
"protoc": {
        "options": [
            "--proto_path=proto",
        ]
    }


KOmandu
proto:
	rm -f pb/*.go
	rm -f doc/swagger/*.swagger.json
	protoc --proto_path=proto --go_out=pb --go_opt=paths=source_relative \
	--go-grpc_out=pb --go-grpc_opt=paths=source_relative \
	--grpc-gateway_out=pb --grpc-gateway_opt=paths=source_relative \
	--openapiv2_out=doc/swagger --openapiv2_opt=allow_merge=true,merge_file_name=simple_bank \
	proto/*.proto
	statik -src=./doc/swagger -dest=./doc

  zamenimo za sada sa komandom
  proto:
  rm -f pb/*.go
	protoc --proto_path=proto --go_out=pb --go_opt=paths=source_relative \
	--go-grpc_out=pb --go-grpc_opt=paths=source_relative \
	proto/*.proto


  Onda kucamo:
  make proto
  go mod tidy

  Dodavanje biblioteke za Logove
  go get -u github.com/rs/zerolog/log

  evans --version
  evans --host localhost --port 9090 -r repl
  show service
  exit

/**** gRPC Gateway ***/
cd /d/go_workspace/googleapis 
cp google/api/annotations.proto /D/Go_WorkSpace/simplebank/proto/google/api
cp google/api/field_behavior.proto /D/Go_WorkSpace/simplebank/proto/google/api
cp google/api/http.proto /D/Go_WorkSpace/simplebank/proto/google/api
cp google/api/httpbody.proto /D/Go_WorkSpace/simplebank/proto/google/api

izmenimo komandu u Make file-u:
proto:
	rm -f pb/*.go
	protoc --proto_path=proto --go_out=pb --go_opt=paths=source_relative \
	--go-grpc_out=pb --go-grpc_opt=paths=source_relative \
	--grpc-gateway_out=pb --grpc-gateway_opt=paths=source_relative \
	proto/*.proto

i uradimo:
make proto


 git clone https://github.com/swagger-api/swagger-ui.git
 cp -r dist/* /D/Go_WorkSpace/simplebank/doc/swagger


 /**** negde zaostalo ***/
 migrate create -ext sql -dir db/migration -seq add_verify_emails
make migrateup
make sqlc

/**** Implementacija loggera preko GRPC interceptor-a ***/
go get -u github.com/rs/zerolog/log

/***** Asinhroni rad ***/
go get -u github.com/hibiken/asynq